import groovy.json.JsonBuilder
import groovy.xml.MarkupBuilder

/**
 * Generate the standard remote config file shipped with the
 *  application
 */
task generateRemoteConfigDefaults {

    println("Remote Config - Generating...")

    def year = new Date().format('yyyy')

    // Generate supported seasons
    def supportedSeasonsModel = new Object()
    supportedSeasonsModel.metaClass.seasons = []
    for (item in 1950..year.toInteger()) {
        def season = new Object()
        season.metaClass.s = item
        supportedSeasonsModel.seasons.add(season)
    }
    def jsonBuilder = new JsonBuilder()
    jsonBuilder(supportedSeasonsModel)
    def supportedSeasons = jsonBuilder.toString()

    // Generate file
    def filePath = project.projectDir.absolutePath + "/../core/configuration/src/main/res/xml/remote_config_defaults.xml"
    new File(filePath).getParentFile().mkdirs()
    new File(filePath).withWriter { writer ->
        def xmlBuilder = new MarkupBuilder(writer)
        xmlBuilder.doubleQuotes = true
        xmlBuilder.mkp.xmlDeclaration(version: '1.0', encoding: 'utf-8')

        xmlBuilder.defaultsMap {
            entry {
                key('adverts')
                value('{"locations":{"home":false,"race":false,"search":false,"rss":false},"allowUserConfig":false}')
            }
            entry {
                key('advert_config')
                value('{"locations":{"home":false,"race":false,"search":false,"rss":false},"allowUserConfig":false}')
            }
            entry {
                key('default_year')
                value(year)
            }
            entry {
                key('banners')
                value()
            }
            entry {
                key('email')
                value(project.ext.contactEmail)
            }
            entry {
                key('easteregg_snow')
                value('false')
            }
            entry {
                key('force_upgrade')
                value()
            }
            entry {
                key('data_provided')
                value('Data provided by the Flashback Team and Ergast API')
            }
            entry {
                key('supported_seasons')
                value(supportedSeasons)
            }
            entry {
                key('rss')
                value('false')
            }
            entry {
                key('rss_add_custom')
                value('true')
            }
            entry {
                key('motorsport_events')
                value('false')
            }
            entry {
                key('rss_supported_sources')
                value('{"sources":[{"rssLink":"https://www.autosport.com/rss/feed/f1","sourceShort":"AS","source":"https://www.autosport.com","colour":"#FF0000","textColour":"#ffffff","title":"Autosport","contactLink":"https://www.autosport.com/contact/"},{"rssLink":"https://crash.net/rss/f1","sourceShort":"C","source":"https://www.crash.net","colour":"#E91B1C","textColour":"#ffffff","title":"Crash.net","contactLink":"https://www.crash.net/contact"},{"rssLink":"https://motorsport.com/rss/f1/news/","sourceShort":"MS","source":"https://www.motorsport.com","colour":"#FFD806","textColour":"#181818","title":"Motorsport","contactLink":"https://www.motorsport.com/info/contact/"},{"rssLink":"https://www.pitpass.com/fes_php/fes_usr_sit_newsfeed.php","sourceShort":"PP","source":"https://www.pitpass.com","colour":"#611818","textColour":"#ffffff","title":"PitPass","contactLink":"https://www.pitpass.com/contact-us"},{"rssLink":"https://www.f1-fansite.com/feed/","sourceShort":"FF","source":"https://www.f1-fansite.com","colour":"#DF2C19","textColour":"#ffffff","title":"F1 Fansite","contactLink":"https://www.f1-fansite.com/about-us/"},{"rssLink":"https://feeds.bbci.co.uk/sport/formula1/rss.xml","sourceShort":"BBC","source":"https://www.bbc.co.uk","colour":"#FFD04C","textColour":"#181818","title":"BBC Sport","contactLink":"https://www.bbc.co.uk/sport/15561348"},{"rssLink":"https://www.theguardian.com/sport/formulaone/rss","sourceShort":"TG","source":"https://www.theguardian.com","colour":"#002B60","textColour":"#ffffff","title":"The Guardian","contactLink":"https://www.theguardian.com/help/contact-us"},{"rssLink":"https://wtf1.com/feed/","sourceShort":"WTF","source":"https://wtf1.com","colour":"#F66733","textColour":"#ffffff","title":"WTF1","contactLink":"https://wtf1.com/about-us/"},{"rssLink":"https://www.grandprix247.com/feed/","sourceShort":"GP","source":"https://www.grandprix247.com","colour":"#BD0216","textColour":"#ffffff","title":"GrandPrix247","contactLink":"https://www.grandprix247.com/contact/"},{"rssLink":"https://en.f1i.com/news/feed","sourceShort":"F1I","source":"https://en.f1i.com","colour":"#EC192D","textColour":"#ffffff","title":"F1i","contactLink":"https://f1i.com/contact"},{"rssLink":"https://www.f1technical.net/rss/news.xml","sourceShort":"FT","source":"https://www.f1technical.net/","colour":"#2E6A9B","textColour":"#ffffff","title":"F1Technical","contactLink":"https://www.f1technical.net/pr/feedback.php"}]}')
            }
            entry {
                key('material_you')
                value('false')
            }
            entry {
                key('config_url')
                value(project.ext.baseUrl)
            }
        }
    }

    println("Remote Config - Generated")
}
