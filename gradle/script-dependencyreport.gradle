import groovy.xml.MarkupBuilder

apply plugin: 'com.github.ben-manes.versions'

def gitSha() {
    return 'git rev-parse --short HEAD'.execute([], rootDir).text.trim()
}

dependencyUpdates {
    outputFormatter = { result ->
        def updatable = result.outdated.dependencies
        if (!updatable.isEmpty()) {
            def filepath = "reports/${project.name}-dependencies-result.html"
            def file = new File(filepath)
            if (!file.exists()) {
                // Make the
                file.getParentFile().mkdirs()
            }
            def fileWriter = new FileWriter(file)
            def html = new MarkupBuilder(fileWriter)

            html.html {
                body {
                    h3("Module: $project.name")
                    h3("Git commit: ${gitSha()}")
                    h4("Last updated: ${LocalDateTime.now()}")
                    table {
                        tr {
                            th("Group")
                            th("Module")
                            th("Current version")
                            th("Latest version")
                        }
                        updatable.each { dependency ->
                            println("DEPENDENCY $dependency.name")
                            println(dependency.available)
                            tr {
                                td(dependency.group)
                                td(dependency.name)
                                td(dependency.version)
                                td(dependency.available.release ?: dependency.available.milestone)
                            }
                        }
                    }
                }
            }
            println "[DEPENDENCY REPORTER] Generated file: $filepath"
        }
    }
}