// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    apply from: rootDir.absolutePath + "/versions.gradle"

    ext.kotlinCompilerArgs = [
            "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-opt-in=kotlinx.coroutines.ObsoleteCoroutinesApi",
            "-opt-in=kotlinx.coroutines.FlowPreview",
            "-opt-in=kotlinx.serialization.ExperimentalSerializationApi",
            "-opt-in=androidx.compose.material3.windowsizeclass.ExperimentalMaterial3WindowSizeClassApi",
            "-Xstring-concat=inline"
    ]

    repositories {
        google()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        gradlePluginPortal()
    }

    dependencies {
        classpath libs.google.services
        classpath libs.gradle.agp
        classpath libs.gradle.crashlytics
        classpath libs.gradle.dep.report
        classpath libs.gradle.hilt
        classpath libs.gradle.junit5
        classpath libs.gradle.kotlin
        classpath libs.play.publisher
        classpath libs.kotlinx.serialization.core
        classpath libs.firebase.perf.plugin
        classpath libs.oss.licenses.plugin
        //noinspection GradleDependency
    }
}

plugins {
    alias(libs.plugins.ksp) apply false
    alias(libs.plugins.composecompiler) apply false
}

apply from: rootDir.absolutePath + "/gradle/script-dependencyreport.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://jitpack.io' }
    }
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}