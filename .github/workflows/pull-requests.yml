name: Pull Request
'on':
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'releases.json'
jobs:

  json_checker:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: json-syntax-check
        uses: limitusus/json-syntax-check@v2.0.0
        with:
          pattern: "\\.json$"

  unit_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      # Checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Checkout branch in head vs. base so diff can be checked
      - name: Checkout - branches
        run: git checkout ${{ github.base_ref }}
      - name: Checkout - head
        run: git checkout ${{ github.head_ref }}

      # Check to see if .kt or .xml has been updated
      - name: Calculate change
        id: change
        run: |
         echo "gradle=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }} | grep '.kt\|.gradle\|.toml\|.xml' -c)" >> $GITHUB_OUTPUT

      # Caching gradle
      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/*.toml*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Unit Tests
      - name: :app
        run: ./gradlew testDebugUnitTest :app:testSandDebugUnitTest

      # Publish test report
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3.7.1
        if: always()
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'

  release_compile:
    runs-on: ubuntu-latest
    timeout-minutes: 18
    steps:
      # Checkout
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Checkout branch in head vs. base so diff can be checked
      - name: Checkout - branches
        run: git checkout ${{ github.base_ref }}
      - name: Checkout - head
        run: git checkout ${{ github.head_ref }}

      # Check to see if .gradle or .toml is updated
      - name: Calculate change
        id: change
        run: |
          echo "gradle=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }} | grep '.gradle\|.toml' -c)" >> $GITHUB_OUTPUT

      # Caching gradle
      - uses: actions/cache@v3
        if: steps.change.outputs.gradle != 0
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/*.toml*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Environment
      - name: Environment variables
        if: steps.change.outputs.gradle != 0
        run: |
          echo ${{ secrets.ENCODED_GOOGLE_SERVICES_LIVE }} | base64 --decode >> app/src/live/google-services.json
          echo ${{ secrets.ENCODED_KEYSTORE }} | base64 --decode >> flashback.keystore
          echo ${{ secrets.ENCODED_DEPLOYMENT_KEY }} | base64 --decode >> deployment_private_key.json

      # Assemble release build
      - name: Assemble release build
        if: steps.change.outputs.gradle != 0
        env:
          KEYSTORE: ${{ github.workspace }}/flashback.keystore
          PRIVATE_KEY: ${{ github.workspace }}/deployment_private_key.json
          KEYSTORE_ALIAS: ${{ secrets.KEYSTORE_ALIAS }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          VERSION_CODE: 1
          VERSION_NAME: 0.0.0
        run: |
          ./gradlew assembleLiveRelease