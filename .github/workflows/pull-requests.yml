name: Pull Request
'on':
  pull_request:
    branches:
      - main
jobs:

  json_checker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: json-syntax-check
        uses: limitusus/json-syntax-check@v1
        with:
          pattern: "\\.json$"

      - name: Release information
        run: |
          content=`cat releases.json`
          echo "versionCodeString=$(cat releases.json | grep versionCode | tail -1)" >> $GITHUB_ENV
          echo "versionNameString=$(cat releases.json | grep versionName | tail -1)" >> $GITHUB_ENV


          echo "versionCode=$(echo "${${{ env.versionCodeString }}//[^0-9]/}")" >> $GITHUB_ENV
          echo "versionName=$(echo "${${{ env.versionNameString }}//[^0-9.]/}")" >> $GITHUB_ENV

          echo "VersionCode ${{ env.versionCode }}"
          echo "VersionCodeString ${{ env.versionCodeString }}"
          echo "VersionName ${{ env.versionName }}"
          echo "VersionNameString ${{ env.versionCodeString }}"

  unit_test_diff_check:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Checkout branch in head vs. base so diff can be checked
      - name: Checkout - branches
        run: git checkout ${{ github.base_ref }}
      - name: Checkout - head
        run: git checkout ${{ github.head_ref }}

      # Generate output list of modules
      - name: Calculate change
        id: change
        run: |
          echo "::set-output name=app::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                                | grep -E '^app/' -c)"
          echo "::set-output name=feature_common::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                     | grep -E '^feature/common/' -c)"
          echo "::set-output name=feature_formula1::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                   | grep -E '^feature/formula1/' -c)"
          echo "::set-output name=feature_rss::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                        | grep -E '^feature/rss/' -c)"
          echo "::set-output name=feature_statistics::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                 | grep -E '^feature/statistics/' -c)"
          echo "::set-output name=feature_statistics_data::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}            | grep -E '^feature/statistics-data/' -c)"
          echo "::set-output name=feature_statistics_data_firebase::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}   | grep -E '^feature/statistics-data-firebase/' -c)"
          echo "::set-output name=feature_upnext::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                     | grep -E '^feature/upnext/' -c)"
          echo "::set-output name=core_ads::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                           | grep -E '^core/ads/' -c)"
          echo "::set-output name=core_analytics::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                     | grep -E '^core/analytics/' -c)"
          echo "::set-output name=core_appshortcuts::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                  | grep -E '^core/appshortcuts/' -c)"
          echo "::set-output name=core_configuration::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                 | grep -E '^core/configuration/' -c)"
          echo "::set-output name=core_crash_reporting::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}               | grep -E '^core/crash-reporting/' -c)"
          echo "::set-output name=core_device::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                        | grep -E '^core/device/' -c)"
          echo "::set-output name=core_notifications::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                 | grep -E '^core/notifications/' -c)"
          echo "::set-output name=core_preferences::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                   | grep -E '^core/preferences/' -c)"
          echo "::set-output name=core_tutorial::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                      | grep -E '^core/tutorial/' -c)"
          echo "::set-output name=core_ui::$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                            | grep -E '^core/ui/' -c)"

    outputs:
      app: ${{ steps.change.outputs.app != 0 }}
      feature_common: ${{ steps.change.outputs.feature_common != 0 }}
      feature_formula1: ${{ steps.change.outputs.feature_formula1 != 0 }}
      feature_rss: ${{ steps.change.outputs.feature_rss != 0 }}
      feature_statistics: ${{ steps.change.outputs.feature_statistics != 0 }}
      feature_statistics_data: ${{ steps.change.outputs.feature_statistics_data != 0 }}
      feature_statistics_data_firebase: ${{ steps.change.outputs.feature_statistics_data_firebase != 0 }}
      feature_upnext: ${{ steps.change.outputs.feature_upnext != 0 }}
      core_ads: ${{ steps.change.outputs.core_ads != 0 }}
      core_analytics: ${{ steps.change.outputs.core_analytics != 0 }}
      core_appshortcuts: ${{ steps.change.outputs.core_appshortcuts != 0 }}
      core_configuration: ${{ steps.change.outputs.core_configuration != 0 }}
      core_crash_reporting: ${{ steps.change.outputs.core_crash_reporting != 0 }}
      core_device: ${{ steps.change.outputs.core_device != 0 }}
      core_notifications: ${{ steps.change.outputs.core_notifications != 0 }}
      core_preferences: ${{ steps.change.outputs.core_preferences != 0 }}
      core_tutorial: ${{ steps.change.outputs.core_tutorial != 0 }}
      core_ui: ${{ steps.change.outputs.core_ui != 0 }}

  unit_tests:
    runs-on: ubuntu-latest
    needs: [unit_test_diff_check,json_checker]
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Caching gradle
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Unit Tests
      - name: :app
        run: ./gradlew :app:testSandDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.app == 'true' }}

      - name: :feature:common
        run: ./gradlew :feature:common:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.feature_common == 'true' }}

      - name: :feature:formula1
        run: ./gradlew :feature:formula1:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.feature_formula1 == 'true' }}

      - name: :feature:rss
        run: ./gradlew :feature:rss:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.feature_rss == 'true' }}

      - name: :feature:statistics
        run: ./gradlew :feature:statistics:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.feature_statistics == 'true' }}

      - name: :feature:statistics-data
        run: ./gradlew :feature:statistics-data:test
        if: ${{ needs.unit_test_diff_check.outputs.feature_statistics_data == 'true' }}

      - name: :feature:statistics-data-firebase
        run: ./gradlew :feature:statistics-data-firebase:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.feature_statistics_data_firebase == 'true' }}

      - name: :feature:upnext
        run: ./gradlew :feature:upnext:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.feature_upnext == 'true' }}

      - name: :core:ads
        run: ./gradlew :core:ads:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_ads == 'true' }}

      - name: :core:analytics
        run: ./gradlew :core:analytics:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_analytics == 'true' }}

      - name: :core:appshortcuts
        run: ./gradlew :core:appshortcuts:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_appshortcuts == 'true' }}

      - name: :core:configuration
        run: ./gradlew :core:configuration:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_configuration == 'true' }}

      - name: :core:crash-reporting
        run: ./gradlew :core:crash-reporting:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_crash_reporting == 'true' }}

      - name: :core:device
        run: ./gradlew :core:device:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_device == 'true' }}

      - name: :core:notifications
        run: ./gradlew :core:notifications:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_notifications == 'true' }}

      - name: :core:preferences
        run: ./gradlew :core:preferences:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_preferences == 'true' }}

      - name: :core:tutorial
        run: ./gradlew :core:tutorial:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_tutorial == 'true' }}

      - name: :core:ui
        run: ./gradlew :core:ui:testDebugUnitTest
        if: ${{ needs.unit_test_diff_check.outputs.core_ui == 'true' }}

      # Publish test report
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'

  discord_notify:
    runs-on: ubuntu-latest
    needs: unit_tests
    if: failure()
    steps:
      - name: Notify discord of failure
        uses: sarisia/actions-status-discord@v1
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          title: "Pull request has failing tests"
          color: 0xff91a4