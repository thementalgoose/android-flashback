name: Pull Request
'on':
  pull_request:
    branches:
      - main
jobs:
  pr_builder:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - run: git checkout ${{ github.base_ref }}
      - run: git checkout ${{ github.head_ref }}

      # Caching gradle
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Unit Tests - Checking differences
      - name: Unit tests - Checking difference
        run: |
            echo "lines_app=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                                | grep -E '^app/' -c)" >> $GITHUB_ENV
            echo "lines_feature_common=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                     | grep -E '^feature/common/' -c)" >> $GITHUB_ENV
            echo "lines_feature_formula1=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                   | grep -E '^feature/formula1/' -c)" >> $GITHUB_ENV
            echo "lines_feature_rss=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                        | grep -E '^feature/rss/' -c)" >> $GITHUB_ENV
            echo "lines_feature_statistics=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                 | grep -E '^feature/statistics/' -c)" >> $GITHUB_ENV
            echo "lines_feature_statistics_data=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}            | grep -E '^feature/statistics_data/' -c)" >> $GITHUB_ENV
            echo "lines_feature_statistics_data_firebase=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}   | grep -E '^feature/statistics_data_firebase/' -c)" >> $GITHUB_ENV
            echo "lines_feature_upnext=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                     | grep -E '^feature/upnext/' -c)" >> $GITHUB_ENV
            echo "lines_core_ads=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                           | grep -E '^core/ads/' -c)" >> $GITHUB_ENV
            echo "lines_core_analytics=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                     | grep -E '^core/analytics/' -c)" >> $GITHUB_ENV
            echo "lines_core_appshortcuts=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                  | grep -E '^core/appshortcuts/' -c)" >> $GITHUB_ENV
            echo "lines_core_configuration=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                 | grep -E '^core/configuration/' -c)" >> $GITHUB_ENV
            echo "lines_core_crash_reporting=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}               | grep -E '^core/crash-reporting/' -c)" >> $GITHUB_ENV
            echo "lines_core_device=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                        | grep -E '^core/device/' -c)" >> $GITHUB_ENV
            echo "lines_core_notifications=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                 | grep -E '^core/notifications/' -c)" >> $GITHUB_ENV
            echo "lines_core_preferences=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                   | grep -E '^core/preferences/' -c)" >> $GITHUB_ENV
            echo "lines_core_tutorial=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                      | grep -E '^core/tutorial/' -c)" >> $GITHUB_ENV
            echo "lines_core_ui=$(git diff --name-only ${{ github.head_ref }} ^${{ github.base_ref }}                            | grep -E '^core/ui/' -c)" >> $GITHUB_ENV

      # Unit Tests
#      - name: Unit tests - app
#        run: ./gradlew :app:testMockDebugUnitTest
#        if: ${{ env.lines_app != 0 }}
#      - name: Unit tests - feature:common
#        run: ./gradlew :feature:common:testDebugUnitTest
#        if: ${{ env.lines_feature_common != 0 }}
#      - name: Unit tests - feature:formula1
#        run: ./gradlew :feature:formula1:testDebugUnitTest
#        if: ${{ env.lines_feature_formula1 != 0 }}
#      - name: Unit tests - feature:rss
#        run: ./gradlew :feature:rss:testDebugUnitTest
#        if: ${{ env.lines_feature_rss != 0 }}
#      - name: Unit tests - feature:statistics
#        run: ./gradlew :feature:statistics:testDebugUnitTest
#        if: ${{ env.lines_feature_statistics != 0 }}
#      - name: Unit tests - feature:statistics_data
#        run: ./gradlew :feature:statistics_data:testDebugUnitTest
#        if: ${{ env.lines_feature_statistics_data != 0 }}
#      - name: Unit tests - feature:statistics_data_firebase
#        run: ./gradlew :feature:statistics_data_firebase:testDebugUnitTest
#        if: ${{ env.lines_feature_statistics_data_firebase != 0 }}
#      - name: Unit tests - feature:upnext
#        run: ./gradlew :feature:upnext:testDebugUnitTest
#        if: ${{ env.lines_feature_upnext != 0 }}
      - name: Unit tests - core:ads
        run: ./gradlew :core:ads:testDebugUnitTest
        if: ${{ env.lines_core_ads != 0 }}
      - name: Unit tests - core:analytics
        run: ./gradlew :core:analytics:testDebugUnitTest
        if: ${{ env.lines_core_analytics != 0 }}
      - name: Unit tests - core:appshortcuts
        run: ./gradlew :core:appshortcuts:testDebugUnitTest
        if: ${{ env.lines_core_appshortcuts != 0 }}
      - name: Unit tests - core:configuration
        run: ./gradlew :core:configuration:testDebugUnitTest
        if: ${{ env.lines_core_configuration != 0 }}
      - name: Unit tests - core:crash-reporting
        run: ./gradlew :core:crash-reporting:testDebugUnitTest
        if: ${{ env.lines_core_crash_reporting != 0 }}
      - name: Unit tests - core:device
        run: ./gradlew :core:device:testDebugUnitTest
        if: ${{ env.lines_core_device != 0 }}
      - name: Unit tests - core:notifications
        run: ./gradlew :core:notifications:testDebugUnitTest
        if: ${{ env.lines_core_notifications != 0 }}
      - name: Unit tests - core:preferences
        run: ./gradlew :core:preferences:testDebugUnitTest
        if: ${{ env.lines_core_preferences != 0 }}
      - name: Unit tests - core:tutorial
        run: ./gradlew :core:tutorial:testDebugUnitTest
        if: ${{ env.lines_core_tutorial != 0 }}
      - name: Unit tests - core:ui
        run: ./gradlew :core:ui:testDebugUnitTest
        if: ${{ env.lines_core_ui != 0 }}

      # Leaving comment if failed
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.17
        if: always()
        with:
          files: |
            **/test-results/**/*.xml

#      - name: Notify PR
#        if: ${{ failure() }}
#        uses: peter-evans/commit-comment@v1
#        with:
#          body: |
#            Unit tests failed for commit ${{ github.sha }}