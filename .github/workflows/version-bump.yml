name: Version bumping
'on':
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version name (ie. 1.0.0)'
        required: true
        default: '0.0.0'
      versionCode:
        description: 'Version code (ie. 1)'
        required: true
        default: '0'
      isMajor:
        description: 'Is this a major release'
        required: true
        default: 'false'
      title:
        description: 'Title for release'
        required: false
        default: ''
      notes:
        description: 'Notes line'
        required: true
        default: '"New release!","Also this happened"'

jobs:
  addrelease:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v2

      # Variables
      - name: Variables
        run: |
          echo "pr_branch=release/${{ github.event.inputs.versionCode }}" >> $GITHUB_ENV
          echo "file=release-notes/${{ github.event.inputs.versionName }}.json" >> $GITHUB_ENV
          echo "existing_version_name=cat app/build.gradle | grep '        versionName '" >> $GITHUB_ENV
          echo "existing_version_code=cat app/build.gradle | grep '        versionCode '" >> $GITHUB_ENV

      # Update build.gradle
      - name: Update build.gradle
        run: |
          sed "s/${{ env.existing_version_code }}/versionCode ${{ github.event.inputs.versionCode }}/g" app/build.gradle >> app/build.gradle
          sed "s/${{ env.existing_version_name }}/versionName ${{ github.event.inputs.versionName }}/g" app/build.gradle >> app/build.gradle

      # Create JSON
      - name: Create json
        run: echo $JSON >> ${{ env.file }}
        env:
          JSON: |
            {
              "versionName": "${{ github.event.inputs.versionName }}",
              "versionCode": "${{ github.event.inputs.versionCode }}",
              "isMajor": "${{ github.event.inputs.isMajor }}",
              "title": "${{ github.event.inputs.title }}",
              "notes": [
                ${{ github.event.inputs.notes }}
              ]
            }

      # Perform git checkout updates
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b ${{ env.pr_branch }}
          git status
          git add release-notes/
          git commit -am "Bumped version to ${{ github.event.inputs.versionName }} (${{ github.event.inputs.versionCode }})"

       # Push branch to github
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.pr_branch }}

      # Raise PR
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "${{ env.pr_branch }}"
          destination_branch: "main"
          pr_title: "Release ${{ github.event.inputs.versionName }} (${{ github.event.inputs.versionCode }})"
          pr_assignee: "thementalgoose"
          pr_label: "Release"
          github_token: ${{ secrets.GITHUB_TOKEN }}