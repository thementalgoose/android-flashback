import com.github.triplet.gradle.androidpublisher.ResolutionStrategy

apply plugin: 'com.android.application'
apply from: rootDir.absolutePath + "/gradle/config-android.gradle"
apply from: rootDir.absolutePath + "/gradle/config-junit5.gradle"

apply plugin: 'koin'
apply from: rootDir.absolutePath + "/gradle/config-koin.gradle"

apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'com.github.triplet.play'

apply from: rootDir.absolutePath + "/gradle/script-remoteconfig.gradle"
apply from: rootDir.absolutePath + "/gradle/script-releasenotes.gradle"

android {
    compileSdkVersion project.ext.compileSdkVersion

    defaultConfig {
        applicationId "tmg.flashback"
        minSdkVersion project.ext.minSdkVersion
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 93
        versionName "6.3.4"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE") ?: "flashback.keystore")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude "win32-x86-64/attach_hotspot_windows.dll"
        exclude "win32-x86/attach_hotspot_windows.dll"
        exclude "META-INF/LGPL2.1"
        exclude "META-INF/AL2.0"
        exclude "META-INF/licenses/ASM"
        pickFirst "META-INF/*"
    }

    flavorDimensions 'version'
    productFlavors {
        sand {
            dimension 'version'
            applicationIdSuffix '.sand'
            versionNameSuffix '-sand'

            buildConfigField "int", "ENVIRONMENT", '1'
        }

        live {
            dimension 'version'

            buildConfigField "int", "ENVIRONMENT", '0'
        }
    }

    packagingOptions {
        exclude "META-INF/LICENSE*"
    }
}

play {
    track = 'internal'
    serviceAccountCredentials = file(System.getenv("PRIVATE_KEY") ?: "flashback.json")
    defaultToAppBundles = true
    resolutionStrategy = ResolutionStrategy.IGNORE
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("assemble")) {
        task.dependsOn generateRemoteConfigDefaults
    }
    if (task.name.contains("assemble")) {
        task.dependsOn generateReleaseNotes
    }
}

dependencies {

    // Feature modules
    implementation project(path: ":feature:statistics")
    implementation project(path: ":feature:statistics-data-firebase")
    implementation project(path: ":feature:formula1")
    implementation project(path: ":feature:upnext")
    implementation project(path: ":feature:rss")
    implementation project(path: ":feature:common")

    // Core modules
    implementation project(path: ":core:analytics")
    implementation project(path: ":core:configuration")
    implementation project(path: ":core:crash-reporting")
    implementation project(path: ":core:device")
    implementation project(path: ":core:notifications")
    implementation project(path: ":core:ui")
    implementation project(path: ":core:preferences")

    // Android Test
    androidTestImplementation "androidx.test:rules:1.4.0"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.2"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.2"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$junit"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-engine:$junit"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-params:$junit"
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit"
    androidTestImplementation "io.mockk:mockk-android:$mockk"
    androidTestImplementation "io.insert-koin:koin-test:$koin_version"
    androidTestImplementation('com.schibsted.spain:barista:3.7.0') {
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }

    // Splash screen
    implementation deps.androidx.splashscreen

    // Discord Overlapping panels
    implementation deps.discord

    // TMG dependencies
    implementation deps.tmg.aboutthisapp
    implementation deps.tmg.utilities
    implementation deps.tmg.labelledprogressbar

    // Preferences
    implementation deps.androidx.preference

    // Glide
    implementation deps.glide.glide
    kapt deps.glide.kapt

    // BugShaker
    implementation deps.bugshaker

    // Lottie
    implementation deps.lottie

    // Skeleton Layout
    implementation deps.skeletonlayout

    // Circle Image View
    implementation deps.circleimageview

    // Notifications + Config
    implementation platform(deps.firebase.bom)
    implementation deps.firebase.analytics
    implementation deps.firebase.messaging
    implementation deps.firebase.config
    implementation deps.firebase.crashlytics
    implementation deps.kotlin.playservices
}

apply plugin: 'com.google.gms.google-services'
