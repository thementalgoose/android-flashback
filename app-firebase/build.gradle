import groovy.xml.MarkupBuilder
import groovy.json.JsonBuilder

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'de.mannodermaus.android-junit5'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += kotlinCompilerArgs
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        androidTest.resources.srcDirs += 'src/androidTest/res'
        test.java.srcDirs += 'src/test/java'
    }

    testOptions {
        junitPlatform {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
        }
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                afterSuite { desc, result ->
                    if (!desc.parent) {
                        println "\n======================================================================="
                        println "${desc.displayName}"
                        println "Test result: ${result.resultType}"
                        println "Test summary: ${result.testCount} tests, " +
                                "${result.successfulTestCount} succeeded, " +
                                "${result.failedTestCount} failed, " +
                                "${result.skippedTestCount} skipped"
                        println "======================================================================="
                    }
                }
                useJUnitPlatform()
                testLogging {
                    showStandardStreams = true
                    events "passed", "skipped", "failed", "standardOut", "standardError"
                }
            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation project(path: ':app-repo')
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "io.mockk:mockk:$mockk"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebase_bom")
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-firestore'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-common-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'

    // ThreeTen
    implementation "com.jakewharton.threetenabp:threetenabp:$threeten"
    testImplementation ("org.threeten:threetenbp:$threetenbp") {
        exclude group:'com.jakewharton.threetenabp', module:'threetenabp'
    }

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
}