apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

apply from: rootDir.absolutePath + "/base-dependencies.gradle"

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += kotlinCompilerArgs
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        androidTest.resources.srcDirs += 'src/androidTest/res'
        test.java.srcDirs += 'src/test/java'
    }

    testOptions {
        junitPlatform {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
            }
        }
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                afterSuite { desc, result ->
                    if (!desc.parent) {
                        println "\n======================================================================="
                        println "${desc.displayName}"
                        println "Test result: ${result.resultType}"
                        println "Test summary: ${result.testCount} tests, " +
                                "${result.successfulTestCount} succeeded, " +
                                "${result.failedTestCount} failed, " +
                                "${result.skippedTestCount} skipped"
                        println "======================================================================="
                    }
                }
                useJUnitPlatform()
                testLogging {
                    showStandardStreams = true
                    events "passed", "skipped", "failed", "standardOut", "standardError"
                }
            }
        }
    }
}

ext {
    retrofit = "2.9.0"
    okhttp3 = "4.7.2"
}

dependencies {
    // Modules
    api project(path: ':base')

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-simplexml:$retrofit"
    implementation "com.squareup.retrofit2:converter-jaxb:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.okhttp3:okhttp:$okhttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3"
    implementation 'org.conscrypt:conscrypt-android:2.2.1'

    // TMG dependencies
    implementation "com.github.thementalgoose:android-components:$tmg_components"
    implementation "com.github.thementalgoose:android-labelled-progress-bar:$tmg_labelled_progressbar"

    // Lottie
    implementation "com.airbnb.android:lottie:$lottie"
}